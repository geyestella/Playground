0. Difference between recursion and iteration 
an iterative function is one that loops to repeat some part of the code, and 
a recursive function is one that calls itself again to repeat the code. 

1. Software development process? Agile? 
Most modern development processes can be vaguely described as agile. Other methodologies include waterfall, prototyping, 
iterative and incremental development, spiral development, rapid application development, and extreme programming.

"Agile software development" refers to a group of software development methodologies based on iterative development, where 
requirements and solutions evolve via collaboration between self-organizing cross-functional teams. 

The waterfall model is a sequential development approach, in which development is seen as flowing steadily downwards (like 
a waterfall) through several phases

   Java
   
   1. Difference between Java and C, C++; C and C++
   Java with C++
1. Java runs in a virtual machine.
2. C++ natively supports unsigned arithmetic.
3. In Java, parameters are always passed by value (or, with objects, their references are passed by value). 
In C++, parameters can be passed by value, pointer, or by reference.
4. Java has built-in garbage collection.
5. C++ allows operator overloading.
6. C++ allows multiple inheritance of classes. Java single class inheritance, but solves the multiplicity via interfaces.
7. At compilation time Java Source code converts into byte code .The interpreter execute this byte code at run time and gives output .
Java is interpreted for the most part and hence platform independent. C++ run and compile using compiler which converts source code 
into machine level languages so c++ is platfrom dependents. Java uses compiler and interpreter both and in c++ their is only compiler

   Java with C
1. Java is an object-oriented language. C is procedure oriented language
2. Java is interpreted Language. C is a compiled language.
3. Java is a high-level language. C is a low-level language.
4. Java does not support pointers. C supports pointers
5. Java supports inheritance C does not support inheritance.
6. C uses the top-down {sharp & smooth} approach while JAVA uses the bottom-up {on the rocks} approach.
7. JAVA supports Method Overloading while C does not support overloading at all.
8. Exception Handling in JAVA And the errors & crashes in C.
When an error occurs in a Java program it results in an exception being thrown. It can then be handled using various exception handling 
techniques. While in C, if there’s an error, there IS an error.

   C with C++
1. C is a procedural programming language and does not support classes and objects, 
while C++ is a combination of both procedural and object oriented programming language;
2. When compared to C++, C is a subset of C++. C++ is a superset of C. C++ can run most of C code while C cannot run C++ code.
3. C does not support function and operator overloading. C++ supports both function and operator overloading.
4. C provides malloc() and calloc()functions for dynamic memory allocation, and free() for memory de-allocation.
C++ provides new operator for memory allocation and delete operator for memory de-allocation.
5. C does not provide direct support for error handling (also called exception handling)
C++ provides support for exception handling. Exceptions are used for "hard" errors that make the code incorrect
 
   Java with Python
1. Java is statically typed, while python is dynamically typed.
2. simple python syntax
3. python is slower(interpreted, types at runtime)
   2. Object Oriented Programming
面向对象的三个基本特征是：封装、多态、继承 encapsulation, polymorphism, and inheritance
Encapsulation is an attribute of an object, and it contains all data which is hidden, can be restricted to the members of that class.
Levels are Public, Protected, Private, Internal and Protected Internal.

Polymorphism is nothing but assigning behavior or value in a subclass to something that was already declared in the main class. 
Simply, polymorphism takes more than one form.

Inheritance is a concept where one class shares the structure and behavior defined in another class. If inheritance applied on one class 
is called Single Inheritance, and if it depends on multiple classes, then it is called multiple Inheritance.

A constructor is a method used to initialize the state of an object, and it gets invoked at the time of object creation. 
Constructor Name should be same as class name. A constructor must have no return type.

An abstract class is a class which cannot be instantiated. Creation of an object is not possible with an abstract class, but it can be
inherited. An abstract class can contain only Abstract method. Java allows only abstract method in abstract class while for other
languages allow non-abstract method as well.

Function overloading an as a normal function, but it can perform different tasks. It allows the creation of several methods with the 
same name which differ from each other by the type of input and output of the function.
void add(int& a, int& b);void add(double& a, double& b);void add(struct bob& a, struct bob& b);

Operator overloading is a function where different operators are applied and depends on the arguments. Operator,-,* can be used to pass 
through the function, and it has their own precedence to execute.

Method overriding is a feature that allows a subclass to provide the implementation of a method that overrides in the main class. This
will overrides the implementation in the superclass by providing the same method name, same parameter and same return type.

Overloading is static binding whereas Overriding is dynamic binding. Overloading is nothing but the same method with different 
arguments, and it may or may not return the same value in the same class itself.
Overriding is the same method names with same arguments and return types associated with the class and its child class.

   3. Garbage Collection
(主要从下面几方面解答 GC原理、最好画图解释一下年轻代（Eden区和Survival区）、年老代、比例分配及为啥要这样分代回收)
Stack & Heap
Java has built-in garbage collection
sufficient memory may not be available and entire program will terminate abnormally causing OutOfMemoryErrors.
Main objective of Garbage Collector is to free heap memory by destroying unreachable objects.

Heap is dividened into different generations.
Young Generation(Eden, survivor space)(minor garbage collection), old generation(main garbage collection), permanent generation
Unreferenced objects are deleted and referenced objects are moved to a survivor space.
when aged objects reach a certain age threshold (8 in this example) they are promoted from young generation to old generation.
4. Polymophism, Inheritance
Inheritance refers to using the structure and behavior of a super class in a subclass.
Polymorphism refers to changing the behavior of a super class in the subclass

   5. Interface & Abstract
An interface is a collection of an abstract method. If the class implements an inheritance, and then thereby inherits all the abstract 
methods of an interface.
	Abstract Class	vs. Interface
1	 An abstract class can extend only one class or one abstract class at a time	 
    An interface can extend any number of interfaces at a time
2	 An abstract class can extend another concrete (regular) class or abstract class	 
    An interface can only extend another interface
3	 An abstract class can have both abstract and concrete methods	 
    An interface can have only abstract methods
4	 In abstract class keyword “abstract” is mandatory to declare a method as an abstract	 
    In an interface keyword “abstract” is optional to declare a method as an abstract
5	 An abstract class can have protected and public abstract methods	 
    An interface can have only have public abstract methods
6	 An abstract class can have static, final or static final variable with any access specifier	 
    interface can only have public static final (constant) variable

   6. Public, Private, Static, Protected, Final
Two types of modifiers are there in java. a) Access Modifiers b) Non-access Modifiers
   Access Modifiers
a) private : private fields or methods or constructors are visible within the class in which they are defined.
b) protected : Protected members of a class are visible within the package but they can be inherited to sub classes outside the package.
c) public : public members are visible everywhere.
d) default or No-access modifiers : Members of a class which are defined with no access modifiers are visible within the package in which they are defined.
   Non-access Modifiers
a) static : This modifier is used to specify whether a member is a class member or an instance member.
b) final : It is used to restrict the further modification of a class or a method or a field. 
c) abstract : abstract class or abstract method must be enhanced or modified further. 

   7. Exception and Error
   An exception is an event that occurs during the execution of a program. Exceptions can be of any type – Runtime exception, Error exceptions. 
   Those exceptions are adequately handled through exception handling mechanism like try, catch and throw keywords.

   8. virtual method and inheritance

   9. Threads and Locks
Deadlocks?

   10. Error and Exception

   11. public static void main(String[] args)
   The StringBuffer class is used to represent characters that can be modified
   string args[] : its a command line argument it is a collection of variables in the string format.
   Java only starts running a program with the specific public static void main(String[] args) signature, and one can think of a signature like their own name -
   it's how Java can tell the difference between someone else's main() and the one true main().
   Data Structures 
   1. Arrays and Linked Lists
    difference:
  
    Reverse Linked list(recursive and non-recursive)
   2. Stacks and Queues; Stack and Heap
    difference:
    
   3. Trees and Graphs?
   Heap
   Huffman tree
   Binary Sort Tree O(n)
   balanced binary tree
   B-tree
   Trie
   4. HashMap

   Algorithms
   1. Sorting Algorithms 
   常见的稳定排序算法有：
冒泡排序（Bubble Sort） — O(n²)
插入排序（Insertion Sort）— O(n²)
桶排序（Bucket Sort）— O(n); 需要 O(k) 额外空间
计数排序 (Counting Sort) — O(n+k); 需要 O(n+k) 额外空间
合并排序（Merge Sort）— O(nlogn); 需要 O(n) 额外空间
二叉排序树排序 （Binary tree sort） — O(n log n) 期望时间; O(n²)最坏时间; 需要 O(n) 额外空间
基数排序（Radix sort）— O(n·k); 需要 O(n) 额外空间

   常见的不稳定排序算法有：
选择排序（Selection Sort）— O(n²)
希尔排序（Shell Sort）— O(nlogn)
堆排序（Heapsort）— O(nlogn)
快速排序（Quicksort）— O(nlogn) 期望时间, O(n²) 最坏情况; 对于大的、乱数串行一般相信是最快的已知排序?How to select the pivot?
Divide and Conquer
伪代码:   
QUCIKSORT(A, p, r)
if p < r
    q = PARTITION(A, p, r)
    QUICKSORT(A, p, q-1)
    QUICKSORT(A, q+1, r)
选取标兵以及划分的伪代码:
PARTITION(A, p, r)
x = A[r]
i = p - 1
for j = p to r - 1
    if A[j] <= x
        i++
        swap A[i] with A[j]
swap A[i+1] with A[j]
return i+1
在最好的情况下，每次 partition 都会把数组一分为二，所以时间复杂度 T(n) = 2T(n/2) + O(n)
解为 T(n) = O(nlog(n))
在最坏的情况下，数组刚好和想要的结果顺序相同，每次 partition 到的都是当前无序区中最小(或最大)的记录，因此只得到一个比上一次划分少一个记录的子序列。T(n) = O(n) + T(n-1)
解为 T(n) = O(n²)
在平均的情况下，快排的时间复杂度是 O(nlog(n))
   2. Recursion

   3. Divide and Conquer

   4. Depth? 
DFS BFS
   Web Design
   1. MVC 

   2. Framework

   Database
   1. Primary and Foreign Key

   2. Normalization

   3. Different types of join

   4. Design Cycle

   5. Index
第一，通过创建唯一性的索引，可以保证数据库表中每一行数据的唯一性。
第二，可以大大加快数据的检索速度，这也使创建索引的最主要的原因。
第三，可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。
第四，在使用分组和排序子句进行数据检索时，同样可以显著的减少查询中查询中分组和排序的时间。
第五，通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。 
   Network
   1. OSI 7 Layer Model
Level 7 Application Layer
Level 6 Presentation Layer
Level 5 Session Layer
Level 4 Transport Layer
Level 3 Network Layer
Level 2 Data Link Layer
Level 1 Physical Layer
